# All logs start being sent to the unparsed index.
# The filters below will route them to the @index=app or @index=platform
if ! [@metadata][index] {
    mutate {
        add_field => { "[@metadata][index]" => "unparsed" }
        add_field => { "[@metadata][type]" => "%{[@type]}" }
    }
}

if [@metadata][type] == "NATS" {
  # Parse BOSH NATS logs 
  json {
  	source => "@message"
  	target => "NATS"
      add_tag => "NATS"
  }
  
  if [subject] {
  	mutate {
  		rename => { "[subject]" => "[NATS][subject]" }
  		rename => { "[reply]" => "[NATS][reply]" }
  		add_field => { "[@level]" => "INFO" }
  	}
  	# When reply == nil rename doesn't remove it
          mutate {
  		remove_field => "[reply]"
  	}
  }
  
  if [NATS][subject] =~ /hm\.agent\.heartbeat.*/ {
  	mutate {
  		add_field => { "[@source][job_and_index]" => "%{[NATS][job]}/%{[NATS][index]}" }
  		add_tag => ["hm_agent_heartbeat"]
  	}
  	mutate {
  		rename => { "[NATS][job]" => "[@source][job]" }
  		rename => { "[NATS][index]" => "[@source][index]" }
  	}
  	mutate {
  		convert => { "[NATS][vitals][cpu][sys]" => "float" }
  		convert => { "[NATS][vitals][cpu][user]" => "float" }
  		convert => { "[NATS][vitals][cpu][wait]" => "float" }
  		convert => { "[NATS][vitals][disk][ephemeral][inode_percent]" => "float" }
  		convert => { "[NATS][vitals][disk][ephemeral][percent]" => "float" }
  		convert => { "[NATS][vitals][disk][system][inode_percent]" => "float" }
  		convert => { "[NATS][vitals][disk][system][percent]" => "float" }
  		convert => { "[NATS][vitals][mem][kb]" => "float" }
  		convert => { "[NATS][vitals][mem][percent]" => "float" }
  		convert => { "[NATS][vitals][swap][kb]" => "float" }
  		convert => { "[NATS][vitals][swap][percent]" => "float" }
  	}
  	if [vitals][disk][persistent] {
  		mutate {
  			convert => { "[NATS][vitals][disk][persistent][inode_percent]" => "float" }
  			convert => { "[NATS][vitals][disk][persistent][percent]" => "float" }
  		}
  	}
  	ruby {
  	     code => "event['NATS']['vitals']['load'] = { 'avg01' => event['NATS']['vitals']['load'][0].to_f, 'avg05' => event['NATS']['vitals']['load'][1].to_f, 'avg15' =>\
  event['NATS']['vitals']['load'][2].to_f }"
  	}
  } else if [NATS][subject] =~ /hm\.(director|agent)\.alert.*/ {
  	mutate {
  		add_tag => "hm_alert"
  	}
          date {
  		match => [ "[NATS][created_at]", "UNIX" ]
  		tag_on_failure => "fail/NATS/hm_alert/date"
  		remove_field => "[NATS][created_at]"
  	}
  	translate {
  		field => "[NATS][severity]"
  		destination => "[@level]"
  		override => true
  		dictionary => [ 
  			"1", "FATAL",
  			"2", "FATAL",
  			"3", "ERROR",
  			"4", "WARN" ]
  		fallback => "INFO"
  	}
  }
  
  #Route to index and type
  mutate {
      replace => { "[@metadata][index]" => "platform" }
      replace => { "[@metadata][type]" => "NATS" }
  }

}
